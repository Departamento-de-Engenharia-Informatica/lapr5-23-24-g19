@startuml
autonumber

participant "Route" as r
participant "Controller" as ctrl
participant "dto:\nClientDTO" as xdto
participant "Service" as svc
participant "user:\nClient" as b

participant "RoleRepository" as r_repo
participant "ClientRepository" as repo
participant "i_dto:\nIAuthUserDTO" as i_dto
participant "ar_dto:\nIAssingRoleDTO" as ar_dto
participant "AuthRepository" as a_repo


participant "DBDriver" as db


participant "Mapper" as map

participant "createdDto:\nCreatedClientDTO" as dto


[-> r : POST /clients
activate r
    r -> ctrl : createClient(req,res)

    activate ctrl
        ctrl --> xdto ** : create()
        ctrl -> svc : createClient(dto)
        activate svc
            svc -> repo: find(email)
            activate repo
                repo -> db : findOne()
                activate db
                deactivate db
            deactivate repo

            alt user already exists
                svc --> ctrl : error
                ctrl --> r : error (422)
                [<-- r : 422: Already exists

            else
            svc --> b ** : create()

            else user not created
                svc --> ctrl : error
                ctrl --> r : error (422)
                [<-- r : 422: Unprocessable Content
            else user created successfully

                svc -> r_repo: find(role)
                activate r_repo
                deactivate r_repo


                svc -> repo : save(user)
                activate repo
                    repo -> db : save
                    activate db
                    deactivate db
                deactivate repo

                svc --> i_dto ** : create()
                svc -> a_repo : createUser(i_dto)
                activate a_repo
                deactivate a_repo

                svc --> ar_dto ** : create()
                svc -> a_repo : assignRoleToUser(ar_dto)
                activate a_repo
                deactivate a_repo

                svc -> a_repo : blockUser(email)
                activate a_repo
                deactivate a_repo

                svc -> map : toDTO(user)
                activate map
                    map --> dto **: create(user)
                    activate dto
                        map --> svc : createdDto
                    deactivate dto
                deactivate map

                svc --> ctrl : createdDto
            deactivate svc

            ctrl --> r : createdDto (201)
        deactivate ctrl
    [<-- r : 201: Created
deactivate r
end

@enduml
