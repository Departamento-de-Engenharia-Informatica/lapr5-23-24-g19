@startuml
autonumber

actor "Campus Manager" as usr

participant "HTML + CSS + JS" as view
participant "Controller" as ctrl
participant "BuildingService" as svcb
participant "FloorService" as svcf
participant "ElevatorService" as svce
participant "dto:\nBuildingDTO" as dto
participant "dto:\nFloorAndBuildingDTO" as dtofb
participant "dto:\nElevatorDTO" as dtoee
participant "dto:\nCreatedElevatorDTO" as dtoe



participant "HTTP Driver" as http


activate usr
usr -> view : wants to create elevator
    activate view
        view -> ctrl : ngOnInit()
        activate ctrl
            ctrl -> svcb : getBuildings()
            activate svcb
                svcb -> http : get({baseURL}/buildings)
                activate http
                    http ->] : GET /buildings
        alt building(s) not found

                note right : see us170 documentation
                 http <--]    : 404: error
                http --> svcb : observable
                svcb --> ctrl : error
                ctrl --> ctrl : buildings = []
                note bottom : creates alert with the error message
                ctrl --> view : buildings
                view --> usr : does not list anything
        else building(s) found
                http <--]  : 200: buildings

            http --> svcb : observable
            deactivate http

            loop for each building
                svcb --> dto** : create()
                activate dto
                    dto --> svcb : dto
                deactivate dto
            end

            svcb --> ctrl : dto[]
            deactivate svcb

            ctrl --> ctrl : buildings = dto[]
            ctrl --> view : buildings
            deactivate ctrl




            view --> usr : shows buildings and \nrequest one
        deactivate view

        usr -> view : chooses building
        activate view
            view -> ctrl : listFloors()
            activate ctrl
                ctrl -> svcf : getFloors(selectedBuilding)
                activate svcf
                    svcf -> http : get({baseURL}/buildings/{buildingCode}/floors)
                    activate http
                        http ->] : GET /buildings/{id}/floors

             alt floors(s) not found

                    note right : see us210 documentation
                    http <--]  : 404: error
                    http --> svcf : observable
                    svcf --> ctrl : error
                    ctrl --> ctrl : floors = []
                    note bottom : creates alert with the error message
                    ctrl --> view : floors
                    view --> usr : does not list anything
             else floor(s) found
                http <--]  : 200: floors

                    http --> svcf : observable
                    deactivate http

                    loop for each floor
                        svcf --> dtofb** : create()
                        activate dtofb
                            dtofb --> svcf : dto
                        deactivate dtofb
                    end

                    svcf --> ctrl : dto[]
                deactivate svcf

                ctrl --> ctrl : floors = dto[]
                ctrl --> view : floors
            deactivate ctrl




            view --> usr : shows floors and \nrequest data
        deactivate view

        usr -> view : chooses floors and\nprovides elevator data
        activate view
            view -> ctrl : onSubmit()
            activate ctrl
                ctrl --> dtoee** : create()
                activate dtoee
                    dtoee --> ctrl : dto
                deactivate dtoee

                ctrl -> svce : createElevator(buildingId,dto)
                activate svce

                    svce -> http : post({baseURL}/buildings/{buildingId}/elevators)
                    activate http
                        http ->] : POST /buildings/{id}/elevators

                note right : see us270 documentation
                alt elevator not created / bad parameters
                    http <--]  : 422: error
                    http --> svce : observable
                    svce --> ctrl : error

                note bottom : creates alert with the error message
                    ctrl --> view : createdElevator
                    view --> usr : informs error

                else elevator created successfully

                    http <--]  : 201: elevator
                    http --> svce : observable

                    svce --> dtoe** : create()
                    activate dtoe
                        dtoe --> svce : dto
                    deactivate dtoe

                    svce --> ctrl : dto

                    note bottom : creates alert with success message
                    ctrl --> ctrl : createdElevator = dto
                    ctrl --> view : createdElevator
                    view --> usr : previews created \nelevator information


                    deactivate http
                    deactivate svce
                    deactivate ctrl
                    deactivate view

                    deactivate usr
                end
            end
            end
@enduml
