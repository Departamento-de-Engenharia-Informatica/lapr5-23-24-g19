@startuml

autonumber

actor "Fleet Manager" as usr

participant "HTML + CSS + JS" as view
participant "Controller" as ctrl
participant "Service" as svc
participant "RobotTypeRepository" as t_repo
participant "RobotRepository" as r_repo
participant "dto:\nRobotTypeDTO" as t_dto
participant "dto:\nRobotDTO" as r_dto
participant "dto:\nRobotWithoutStateDTO" as rs_dto

participant "HTTP Driver" as http

activate usr
    usr -> view : wants to create robot
    activate view
        view -> ctrl : getRobots()
            activate ctrl
                ctrl -> svc : getRobots()
                activate svc
                    svc -> r_repo : getRobots()
                    activate r_repo 
                        r_repo -> http: get({baseUrl}/robots)
                        note right of http : see us380 documentation,\n\nin this case, if 404 is returned,\nrobots will be an empty list
                        activate http
                            http <--] : 200: robots
                            http --> r_repo : observable
                        deactivate http
                        loop for each robot 
                            r_repo --> r_dto** : create()
                            activate r_dto
                                r_dto --> r_repo : dto
                            deactivate r_dto
                        end
                        r_repo --> svc : dto[]
                    deactivate r_repo
                    svc --> ctrl : dto[]
                deactivate svc
                ctrl --> ctrl : robots = dto[]
                ctrl --> view : robots
            deactivate ctrl
        view -> ctrl : getRobotTypes()
        activate ctrl
            ctrl -> svc : getRobotTypes()
            activate svc
                svc -> t_repo : getRobotTypes()
                activate t_repo 
                    t_repo -> http: get({baseUrl}/robottypes)
                    note right of http : see list-robotTypes documentation
                    activate http
                        http ->] : GET /robottypes
alt robot type(s) not found
                        http <--] : 404: error
                        http --> t_repo : observable
                        t_repo --> svc : error
                        svc --> ctrl : error
                        note left: creates alert with the error message
                        ctrl --> ctrl : robotTypes = []
                        ctrl --> view : robotTypes
                        view --> usr : informs error
else robot type(s) found
                        http <--] : 200 : robotTypes
                        http --> t_repo : observable
                    deactivate http
                    loop for each robot type
                        t_repo --> t_dto** : create()
                        activate t_dto
                            t_dto --> t_repo : dto
                        deactivate t_dto
                    end
                    t_repo --> svc : dto[]
                deactivate t_repo
                svc --> ctrl : dto[]
            deactivate svc
            ctrl --> ctrl : robotTypes = dto[]
            ctrl --> view : robotTypes
        deactivate ctrl
        view --> usr : requests robot type
    deactivate view

    usr -> view : provides robot type
    activate view
        view --> usr : requests data
    deactivate view

    usr -> view : provides data
    activate view
        view -> ctrl : onSubmit()
        activate ctrl
            ctrl --> rs_dto** : create()
            activate rs_dto
                rs_dto --> ctrl : dto
            deactivate rs_dto
            ctrl -> svc : createRobot(dto)
            activate svc
                svc -> r_repo : createRobot(dto)
                activate r_repo 
                    r_repo -> http: post({baseUrl}/robots)
                    activate http
                        note right of http : see us360 documentation
                        http ->] : POST /robots
alt bad robot parameters
                        http <--] : 422: error
                        http --> r_repo : observable
                        r_repo --> svc : error
                        svc --> ctrl : error
                        note left: creates alert with the error message
                        ctrl --> view : robots
                        view --> usr : informs error
else success
                        http <--] : 201: robot
                        http --> r_repo : observable
                    deactivate http
                    r_repo --> r_dto** : create()
                    activate r_dto
                        r_dto --> r_repo : dto
                    deactivate r_dto
                    r_repo --> svc : dto
                deactivate r_repo 
                svc --> ctrl : dto
            deactivate svc
            ctrl --> ctrl : getRobots()
            note left: creates alert with the created robot details
            ctrl --> view : robots
        deactivate ctrl
        view --> usr : previews created robot
    deactivate view
deactivate usr
end
end

@enduml
